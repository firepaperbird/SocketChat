/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package socketchat;

import data.theUser;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.net.Socket;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import socketchat.OutputThread;

/**
 *
 * @author ngocnt
 */
public class ChatPanel extends javax.swing.JPanel {

    Socket socket = null;
    BufferedReader bf = null;
    DataOutputStream os = null;
    OutputThread t = null;
    Thread thCheck;
    String sender; //sender, a site of the communication
    String receiver; //receiver, other site of the communication

    public ChatPanel(Socket s, String sender, String receiver) {
        initComponents();
        socket = s;
        this.sender = sender;
        this.receiver = receiver;
        try {
            //Inbut buffer and output buffer
            bf = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            os = new DataOutputStream(socket.getOutputStream());
            t = new OutputThread(s, txtMessages, sender, receiver);
            t.start();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "-PN-"+e);
        }
        thCheck = new Thread(){
            
        };
        
    }
    
//    public String url ="";/////dang lam cho nay
//    public String requestList(){        
//        return url.toUpperCase();
//    }
    public String receipt(){
        if(txtMessages.getText().contains("/@sk:/")){
            int id = txtMessages.getText().indexOf("/@sk:/");
            String tmpsk = txtMessages.getText().substring(id+6);
//            String[] a = tmpsk.split("@p@",2);
//            int tmpPort = Integer.parseInt(a[1].trim());
            txtMessages.setText(txtMessages.getText().substring(0, id));
            try {
                return tmpsk;
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,"socket--"+ e);
                return null;
            }
        }
        else
            return null;
    }
    public JTextArea getTxtMessages(){
        return this.txtMessages;
    }
    public String getlis(){
        if(txtMessages.getText().contains("/@lis")){
            int id = txtMessages.getText().indexOf("/@lis");
            String tmpList= txtMessages.getText().substring(id);
            this.txtMessages.setText(this.txtMessages.getText().substring(0, id-9));
            return tmpList;
        }            
        else
            return null;
    }
//    public theUser whoRequest(){
//        return new theUser(sender, socket);
//    }
    public int getID(){
        if(txtMessages.getText().contains("/@uid")){            
            int id = txtMessages.getText().indexOf("/@uid"); 
            int requesIndex = Integer.parseInt(txtMessages.getText().substring(id+5).trim());
            this.txtMessages.setText(this.txtMessages.getText().substring(0, id)+"$$user request to #"+requesIndex+ " $$");
            return requesIndex;
        }            
        else
            return -1;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        txtMessages = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();

        setLayout(new java.awt.BorderLayout());

        txtMessages.setColumns(20);
        txtMessages.setRows(5);
        txtMessages.setEnabled(false);
        jScrollPane3.setViewportView(txtMessages);

        add(jScrollPane3, java.awt.BorderLayout.CENTER);

        txtMessage.setColumns(20);
        txtMessage.setRows(5);
        jScrollPane4.setViewportView(txtMessage);

        btnSend.setText("SEND");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        jToggleButton1.setText("File");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 5, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        add(jPanel3, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
//        if(txtMessage.getText().toUpperCase().contains("/@list"))
//            url="/@list";
        if (!txtMessage.getText().trim().isEmpty()) {
            try {
                os.writeBytes(txtMessage.getText());//+"<to>"+receiver
                os.write(13);
                os.write(10);
                os.flush();
                this.txtMessages.append(sender + ": " + txtMessage.getText() + "\n" );
                txtMessage.setText("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Cannot Connect to Server, please check your connection or try late" );
            }
        }
    }//GEN-LAST:event_btnSendActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextArea txtMessage;
    private javax.swing.JTextArea txtMessages;
    // End of variables declaration//GEN-END:variables
}
